//chrissstrahl - since the game refuses to let me use cheats in multiplayer
//I am fucking gonna use this shitt, ya, screw you bitch! I WIN!!!1111
//
//Contains developer related commands that are needed for proper map testing
//

//[202] chrissstrahl
//commands that are extracted from netname, see player.scr::manageNamechange
//=========================================================================
devcommand local.data:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/devcommand->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	if(!local.data){ iprintlnbold_noloc("GO SLEEP! YOU ARE SLIPPING.");end }
	iprintlnbold_noloc("dev command! :"+local.data)
	
//SPAWNLOCATION STUFF//////////////////////// test and create spawn locations
//SPAWNLOCATION STUFF////////////////////////
//SPAWNLOCATION STUFF////////////////////////
	if(waitthread coop_mod/main.scr::containsText local.data "spawn," game.false){
		local.data = waitthread coop_mod/main.scr::cleanText local.data "spawn,"
//move player to every spawnloc and wait for him to move - ends once all spawns are tested
		if(waitthread coop_mod/main.scr::containsText local.data "test" game.false){
			//iprintlnbold_noloc("test")
			self thread spawnpoints
		}
//spawns markers for every player spawn based on current player pos to show in game if it works
		else if(waitthread coop_mod/main.scr::containsText local.data "new" game.false){
			//iprintlnbold_noloc("show markers")
			self thread spawnmarkers
		}
//spawns markers for every player spawn based on current player pos to show in game if it works
		else if(waitthread coop_mod/main.scr::containsText local.data "try" game.false){
			//iprintlnbold_noloc("test markers")
			self thread testmarkers
		}
//prints consoleoutput based on current status of spawnmarkers
		else if(waitthread coop_mod/main.scr::containsText local.data "p," game.false){
			local.markernames = waitthread coop_mod/main.scr::cleanText local.data "p,"
			//iprintlnbold_noloc("print markers ("+local.markernames+") into console")
			self thread printmarkers local.markernames
		}
	}
//SHOW TOUCH//////////////////////// print info of object touched by developer
//SHOW TOUCH////////////////////////
//SHOW TOUCH////////////////////////
	else if(waitthread coop_mod/main.scr::containsText local.data "touch," game.false){
		self thread showtouch
	}
//NOCLIP//////////////////////// toggels noclip
//NOCLIP////////////////////////
//NOCLIP////////////////////////
	else if(waitthread coop_mod/main.scr::containsText local.data "noclip," game.false){
		self thread noclip
	}
//THREADBIAS//////////////////////// toggels threatbias
//THREADBIAS////////////////////////
//THREADBIAS////////////////////////
	else if(waitthread coop_mod/main.scr::containsText local.data "threat," game.false){
		self thread threatbias
	}
}end

//[202] chrissstrahl
//used for developer to spot relevant objects while testplaying (makeing them blink)
//=========================================================================
timescale local.timeScale:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/timescale->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	if(level.coop_devTimescaleOn){
		setcvar "timescale" local.timeScale
	}
}end

//[202] chrissstrahl
//used for developer to spot relevant objects while testplaying (makeing them blink)
//=========================================================================
blinkMe local.pulseTime:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/blinkMe->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	if(!local.pulseTime){
		local.pulseTime = 0.05
	}
	while(self){
		self hide
		wait local.pulseTime
		if(!self){ end }
		self show
		wait 2
	}
}end


//this was specifically desiged to test ohama beach without coop mod
//=========================================================================
spawnUpdater:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/spawnUpdater->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
//chrissstrahl - temp fixme
while($player == NULL || $player.size < 1){
	waitframe
}
	//mäke süre the pläyer will respäwn where he died düring this test phäse, sö the script döes nöt bräke
	local.lastpos = (0 0 0)
	while($player.size < 2){
		if($player.dmteam != "spectator"){
			if($player.health == 100 && $player.flags["chrissstrahlMove"] != NIL && local.lastpos != (0.000000 0.000000 0.000000)){
				$player origin local.lastpos
				$player.flags["chrissstrahlMove"] = NIL
				//iprintlnbold_noloc("DEV: You have been moved to your last safe pos("+local.lastpos+").")
			}else if($player.health < 100){
				if($player.health <= 0){
					$player.flags["chrissstrahlMove"] = 1
					waitframe
					//iprintlnbold_noloc("DEV: dead.")
				}else{
					//iprintlnbold_noloc("DEV: lastpos.")
					local.lastpos = $player.origin				
				}
			}
		}
		wait 0.25
	}
	iprintlnbold_noloc("DEV: spawnupdater ENDED more than 1 player!!!")
}end


//MOM related
//=========================================================================
noclip:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/noclip->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	//[200] chrissstrahl - check if developer needs to be on
	if(thread coop_mod/main.scr::checkCoopDeveloper "Noclip command"){ end }
	
	if( self == NULL || self.health <= 0 ){
		end
	}
	
	self noclip
	iprintlnbold_noloc ( "developer noclip on (look up to end noclip)" )
	
	local.lookinguptime = 0;
	while( self != NULL ){
		waitframe
		//if player is looking up
		if( self.viewangles[0] < -70 ){
			local.lookinguptime++
		}else{
			local.lookinguptime = 0
		}
		//if dead
		if( self.health <= 0 ){
			local.lookinguptime = 9999
		}
		
		if( local.lookinguptime > 40 ){
			self notsolid
			self noclip
			thread coop_mod/main.scr::playerMakeSolidAsap self
			iprintlnbold_noloc ( "developer noclip off" )
			break
		}
	}
}end

//MOM related
//=========================================================================
heal:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/heal->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	//[200] chrissstrahl - check if developer needs to be on
	if(thread coop_mod/main.scr::checkCoopDeveloper "Heal command"){ end }
	
	if( self == NULL || self.health <= 0 ){
		end
	}
	
	iprintlnbold_noloc ( "developer heal" )
	
	self heal 1
}end

//MOM related
//=========================================================================
spawnpoints:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/spawnpoints->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	//[200] chrissstrahl - check if developer needs to be on
	if(thread coop_mod/main.scr::checkCoopDeveloper "Test Spawnpoints command"){ end }
	
	if( self == NULL || self.health <= 0 || self.dmteam == "spectator"){
		end
	}
	
	iprintlnbold_noloc ( "developer spawnpoints" )
	iprintlnbold_noloc ( "!!! MOVE AWAY TO CONTINUE !!!" )
	self nodamage
	
	for(local.i=1;local.i<=8;local.i++){
		if(self == NULL ){	end	}
		if(self.health <= 0 ){
			self takedamage
			end
		}

		local.vec = level.flags["coop_spawn"+local.i+"origin"]
		
		if(local.vec == NIL){
			iprintlnbold_noloc ( "coop_spawn"+local.i+"origin was NIL!" )
			continue
		}
		
		self forcelegsstate STAND
		self tele local.vec
		self thread coop_mod/main.scr::playerFace level.flags["coop_spawn"+local.i+"angles"]	
		
		while( self != NULL && self.health > 0 && vector_length( local.vec - self.origin) < 100 && local.i<8 && self.dmteam != "spectator"){
			waitframe
		}
		if(local.i<8){
			iprintlnbold_noloc ( "Developer check" )
			wait 1
		}
	}
	iprintlnbold_noloc ( "Developer Test complete" )
	self takedamage
}end


//MOM related
//=========================================================================
makeweak:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/makeweak->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	//[200] chrissstrahl - check if developer needs to be on
	if(thread coop_mod/main.scr::checkCoopDeveloper "Makeweak command"){ end }
	
	iprintlnbold_noloc ( "developer make enemies weak" )
	iprintlnbold_noloc ( "incomplete" )
}end


//MOM related
//=========================================================================
showtouch:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/showtouch->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	//[200] chrissstrahl - check if developer needs to be on
	if(thread coop_mod/main.scr::checkCoopDeveloper "Showtouch command"){ end }
	
	//end touch
	if(self.flags["coop_momShowTouch"] != NIL){
		self.flags["coop_momShowTouch"] = NIL
		iprintlnbold_noloc ( "Show TOUCH OFF" )
		end
	}

	iprintlnbold_noloc ( "Show TOUCH ON" )
	self.flags["coop_momShowTouch"] = 1
	
//prints out a message what the player is touching
//this is used for debugging objects that are hard to find otherwise
	while(self != NULL){
		local.maxentities = int(getcvar("maxentities"))	
		//check every entity
		for (local.i = 0; local.i < local.maxentities; local.i++) {
			local.ent = getentbyentnum local.i
			//exists and has a model (is a tiki)
			if ( local.ent != NULL && local.ent.model != NIL && self istouching local.ent){
				if(local.ent.model.size > 6 ){
					//filter weapons and player (current weapon and playermodel)
					if(waitexec coop_mod/main.scr::containsText local.ent.model "weapons/" ||
						waitexec coop_mod/main.scr::containsText local.ent.model "player/"){
						//exec coop_mod/main.scr::printInfo $player[1] "touching a weapon" 1 NIL
					}else{// if(waitexec coop_mod/main.scr::containsText local.ent.model "/"){
						exec coop_mod/main.scr::printInfo self ("[touching] $"+local.ent.targetname+": "+local.ent.model) 1 NIL
					}
				}
			}
		}
		waitframe		
	}
}end


//MOM related
//=========================================================================
notarget:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/notarget->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	//[200] chrissstrahl - check if developer needs to be on
	if(thread coop_mod/main.scr::checkCoopDeveloper "Notarget command"){ end }
	
	self notarget
	self iprint "toggled notarget" 1
}end


//MOM related
//=========================================================================
threatbias:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/threatbias->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	//[200] chrissstrahl - check if developer needs to be on
	if(thread coop_mod/main.scr::checkCoopDeveloper "Threatbias command"){ end }
	
	if(self.flags["mom_coopThreatbias"] == NIL){
		self.flags["mom_coopThreatbias"] = 1
		self threatbias ignoreme
		self iprint "threatbias ignoreme" 1
	}else{
		self.flags["mom_coopThreatbias"]= NIL
		self threatbias 1
		self iprint "threatbias 1" 1
	}
}end

//[202] chrissstrahl
//creates a preview of how spawnspots would look at this clocation
//=========================================================================
spawnmarkers:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/spawnmarkers->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	local.maxcombinations = 20
	local.origin = self.origin
	local.devcoopspawnmarkers = self.flag["coop_dev_spawnmarkers"]
	if(local.devcoopspawnmarkers == NIL || local.devcoopspawnmarkers > local.maxcombinations){
		self.flag["coop_dev_spawnmarkers"] = 1
		local.devcoopspawnmarkers = 1
	}else{
		self.flag["coop_dev_spawnmarkers"] = (local.devcoopspawnmarkers + 1)
		local.devcoopspawnmarkers++
	}
	
	//make sure markers are spawned
	waitthread spawnmarkers_spawn
	
	//move markers in +x dir away from player
	if(local.devcoopspawnmarkers == 1){
		iprintlnbold_noloc ( "SPAWN CONFIG: +x:1" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] += 40
		}
	}
	//move markers in -x dir away from player
	else if(local.devcoopspawnmarkers == 2){
		iprintlnbold_noloc ( "SPAWN CONFIG: -x:2" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] -= 40
		}
	}
	//move markers in +y dir away from player
	else if(local.devcoopspawnmarkers == 3){
		iprintlnbold_noloc ( "SPAWN CONFIG: +y:3" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[1] += 40
		}
	}
	//move markers in -y dir away from player
	else if(local.devcoopspawnmarkers == 4){
		iprintlnbold_noloc ( "SPAWN CONFIG: -y:4" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[1] -= 40
		}
	}
	//move markers in +x dir away from player in 2 rows
	//Kinda like: ::::
	else if(local.devcoopspawnmarkers == 5){
		iprintlnbold_noloc ( "SPAWN CONFIG: +x +y 2-Row:5" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] += 40
			if(local.i == 4){
				local.testorigin = local.origin
				local.testorigin[1] += 40
			}
		}
	}
	//move markers in +x dir away from player in 2 rows
	//Kinda like: ::::
	else if(local.devcoopspawnmarkers == 6){
		iprintlnbold_noloc ( "SPAWN CONFIG: +x -y 2-Row:6" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] += 40
			if(local.i == 4){
				local.testorigin = local.origin
				local.testorigin[1] -= 40
			}
		}
	}
	//move markers in -x dir away from player in 2 rows
	//Kinda like: ::::
	else if(local.devcoopspawnmarkers == 7){
		iprintlnbold_noloc ( "SPAWN CONFIG: -x -y 2-Row:7" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] -= 40
			if(local.i == 4){
				local.testorigin = local.origin
				local.testorigin[1] -= 40
			}
		}
	}
	//move markers in -x dir away from player in 2 rows
	//Kinda like: ::::
	else if(local.devcoopspawnmarkers == 8){
		iprintlnbold_noloc ( "SPAWN CONFIG: -x +y 2-Row:8" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] -= 40
			if(local.i == 4){
				local.testorigin = local.origin
				local.testorigin[1] += 40
			}
		}
	}
	//move markers in +x +y dir away from player diagonal
	else if(local.devcoopspawnmarkers == 9){
		iprintlnbold_noloc ( "SPAWN CONFIG: +x +y Diagonal:9" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] += 25
			local.testorigin[1] += 25
		}
	}
	//move markers in -x +y dir away from player diagonal
	else if(local.devcoopspawnmarkers == 10){
		iprintlnbold_noloc ( "SPAWN CONFIG: -x +y Diagonal:10" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] -= 25
			local.testorigin[1] += 25
		}
	}
	//move markers in -x -y dir away from player diagonal
	else if(local.devcoopspawnmarkers == 11){
		iprintlnbold_noloc ( "SPAWN CONFIG: -x -y Diagonal:11" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] -= 25
			local.testorigin[1] -= 25
		}
	}
	//move markers in -x +y dir away from player diagonal
	else if(local.devcoopspawnmarkers == 12){
		iprintlnbold_noloc ( "SPAWN CONFIG: -x +y Diagonal:12" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] -= 25
			local.testorigin[1] += 25
		}
	}
	//move markers alternating +x +y dir away from player
	//Kinda like: ',',',',
	else if(local.devcoopspawnmarkers == 13){
		iprintlnbold_noloc ( "SPAWN CONFIG: +x +y alternating:13" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] += 40
			
			local.powerOfTwo = int(local.i / 2)
			if(local.i == (local.powerOfTwo * 2)){
				local.testorigin[1] = local.origin[1]
			}else{
				local.testorigin[1] += 40
			}
		}
	}
	//move markers alternating -x +y dir away from player
	//Kinda like: ',',',',
	else if(local.devcoopspawnmarkers == 14){
		iprintlnbold_noloc ( "SPAWN CONFIG: -x +y alternating:14" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[0] -= 40
			
			local.powerOfTwo = int(local.i / 2)
			if(local.i == (local.powerOfTwo * 2)){
				local.testorigin[1] = local.origin[1]
			}else{
				local.testorigin[1] += 40
			}
		}
	}
	//move markers alternating +y +x dir away from player
	//Kinda like: ',',',',
	else if(local.devcoopspawnmarkers == 15){
		iprintlnbold_noloc ( "SPAWN CONFIG: +y +x alternating:15" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[1] += 40
			
			local.powerOfTwo = int(local.i / 2)
			if(local.i == (local.powerOfTwo * 2)){
				local.testorigin[0] = local.origin[0]
			}else{
				local.testorigin[0] += 40
			}
		}
	}
	//move markers alternating -y +x dir away from player
	//Kinda like: ',',',',
	else if(local.devcoopspawnmarkers == 16){
		iprintlnbold_noloc ( "SPAWN CONFIG: -y +x alternating:16" )
		local.testorigin = local.origin
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			local.testorigin[1] -= 40
			
			local.powerOfTwo = int(local.i / 2)
			if(local.i == (local.powerOfTwo * 2)){
				local.testorigin[0] = local.origin[0]
			}else{
				local.testorigin[0] += 40
			}
		}
	}
	//move markers +x +y dir away from player in 3 rows
	else if(local.devcoopspawnmarkers == 17){
		iprintlnbold_noloc ( "SPAWN CONFIG: +x +y 3rows :17" )
		local.testorigin = local.origin
		local.row = 1
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			
			local.testorigin[0] += 40
			if(local.row == 3){
				local.testorigin[1] += 40
				local.testorigin[0] = local.origin[0]
				local.row = 0
			}
			local.row++
		}
	}
	//move markers +x -y dir away from player in 3 rows
	else if(local.devcoopspawnmarkers == 18){
		iprintlnbold_noloc ( "SPAWN CONFIG: +x -y 3rows :18" )
		local.testorigin = local.origin
		local.row = 1
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			
			local.testorigin[0] += 40
			if(local.row == 3){
				local.testorigin[1] -= 40
				local.testorigin[0] = local.origin[0]
				local.row = 0
			}
			local.row++
		}
	}
	//move markers -x +y dir away from player in 3 rows
	else if(local.devcoopspawnmarkers == 19){
		iprintlnbold_noloc ( "SPAWN CONFIG: -x +y 3rows :19" )
		local.testorigin = local.origin
		local.row = 1
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			
			local.testorigin[0] -= 40
			if(local.row == 3){
				local.testorigin[1] += 40
				local.testorigin[0] = local.origin[0]
				local.row = 0
			}
			local.row++
		}
	}
	//move markers -x -y dir away from player in 3 rows
	else if(local.devcoopspawnmarkers == 20){
		iprintlnbold_noloc ( "SPAWN CONFIG: -x -y 3rows :20" )
		local.testorigin = local.origin
		local.row = 1
		for(local.i=1;local.i<=8;local.i++){
			$("hzmCoopModSpawnMarker"+local.i) origin local.testorigin
			
			local.testorigin[0] -= 40
			if(local.row == 3){
				local.testorigin[1] -= 40
				local.testorigin[0] = local.origin[0]
				local.row = 0
			}
			local.row++
		}
	}
}end

//[202] chrissstrahl - move player to each new marker and wait for him to move away
//=========================================================================
testmarkers:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/testmarkers->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	if(thread coop_mod/main.scr::checkCoopDeveloper "Test Spawnpoints command"){ end }
	
	if( self == NULL || self.health <= 0 ){
		end
	}
	
	iprintlnbold_noloc ( "developer test spawnpoints" )
	iprintlnbold_noloc ( "!!! MOVE AWAY TO CONTINUE !!!" )
	self nodamage
	
	for(local.i=1;local.i<=8;local.i++){
		if(self.health <= 0 || self.dmteam == "spectator"){
			if(self){
				self takedamage
			}
			end
		}

		local.vec = $("hzmCoopModSpawnMarker"+local.i).origin
		
		if(local.vec == NIL){
			iprintlnbold_noloc ( "coop_spawn"+local.i+"origin was NIL!" )
			continue
		}
		
		self forcelegsstate STAND
		self tele local.vec
		
		while( self != NULL && self.health > 0 && vector_length( local.vec - self.origin) < 100 && local.i<8 && self.dmteam != "spectator"){
			waitframe
		}
		if(local.i<8){
			iprintlnbold_noloc ( "Developer check" )
			wait 1
		}
	}
	iprintlnbold_noloc ( "Developer Test complete" )
	self takedamage
}end

//=========================================================================
printmarkers local.markernames:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/printmarkers->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	iprintlnbold_noloc ( "Developer Printed markers ("+local.markernames+")into console" )
	println("//spawn locations at ("+string(self.origin)+") for "+local.markernames)
	local.angle = " 0 "
	local.angle += int(self.viewangles[1])
	local.angle += " 0 "
	
	for(local.i=1;local.i<9;local.i++){
		local.marker = $("hzmCoopModSpawnMarker"+local.i)
		if(local.marker){
			local.temporigin = ""
			local.origin = local.marker.origin
			for(local.j=0;local.j<3;local.j++){
				local.temporigin += " "
				local.temporigin += int(local.origin[local.j])
			}
			local.temporigin += " "
			local.origin = local.temporigin
			
			println("level.flags[\"coop_spawn"+local.i+"origin\"] = ("+local.origin+")")
			println("level.flags[\"coop_spawn"+local.i+"angles\"] = ("+local.angle+")")
		}
	}
}end

//creates a preview of how spawnspots would look at this clocation
//=========================================================================
spawnmarkers_spawn:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/spawnmarkers_spawn->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	for(local.i=1;local.i<9;local.i++){
		local.marker = $("hzmCoopModSpawnMarker"+local.i)
		if(!local.marker){
			spawn script_model model "models/items/Af_P_Lantern.tik" origin (local.origin) notsolid 1 targetname ("hzmCoopModSpawnMarker"+local.i) scale 3
		}
	}
}end

//creates a preview of how spawnspots would look at this clocation
//=========================================================================
spawnmarkers_remove:{
//=========================================================================
if(!level.cMTE){level.cMTE=0}; level.cMTE++; println( "-#-#- thread developer/spawnmarkers_remove->"+level.cMTE+"" ) //[202] chrissstrahl - this is to debug the coop mod thread handling
	for(local.i=1;local.i<9;local.i++){
		local.marker = $("hzmCoopModSpawnMarker"+local.i)
		if(local.marker){
			$("hzmCoopModSpawnMarker"+local.i) remove
		}
	}
}end
